# docker-compose.yml
version: "3.7"
services:
  frontend:
    env_file: 
      - ./.env
    build: ./frontend
    volumes:
      - ./frontend:/var/www/app
      # expose a named volume that works because installing
      # and then mounting will hide that folder, so we need to explicitly
      # show it again
      # note that when reinstalling modules, we need to remove this volume
      - fe_modules:/var/www/app/node_modules
    ports:
      - 3000:3000
      # Debugger port
      - 9222:9222
    environment:
      # The port hooked up to the API 
      - REACT_APP_API_PORT=5000
      # Defines what port to use for development, i.e. localhost:$PORT for the frontend
      - PORT=3000
    command:
      'npm start'
    depends_on:
      - backend
      - db
  backend:
    build: ./backend
    env_file: 
      - ./.env
    volumes:
      - ./backend:/var/www/app
      - ./assets:/var/www/app/assets
      # expose a named volume that works because installing
      # and then mounting will hide that folder, so we need to explicitly
      # show it again
      # note that when reinstalling modules, we need to remove this volume
      - be_modules:/var/www/app/node_modules
    ports:
      - 5000:5000
      # Debugger port
      - 9229:9229
    environment:
      # Defines what port to use for development, i.e. localhost:$PORT for the frontend
      - PORT=5000
      - BYPASS_AUTH=${BYPASS_AUTH}
    command:
      'npm run start:dev'
    depends_on:
      - db
  db:
    image: 'mongo'
    init: true
    logging:
       driver: none
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

# explicitly defines the volumes so that docker-compose down -v will destroy them
volumes:
  fe_modules:
  be_modules:
  mongo_data:
